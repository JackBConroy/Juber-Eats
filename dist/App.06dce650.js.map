{"version":3,"sources":["scripts/App.js"],"names":["window","onload","listings","Array","from","document","getElementsByClassName","forEach","listing","handleSlider","listingsGrid","arrowLeft","arrowRight","console","log","addEventListener","e","preventDefault","handleClassChange","scrollTo","left","offsetWidth","behaviour","direction","classList","remove","add"],"mappings":"AAAAA,MAAM,CAACC,MAAP,GAAgB,YAAM;AAClB,MAAMC,QAAQ,GAAGC,KAAK,CAACC,IAAN,CAAWC,QAAQ,CAACC,sBAAT,CAAgC,UAAhC,CAAX,CAAjB,CADkB,CAGlB;;AACAJ,EAAAA,QAAQ,CAACK,OAAT,CAAiB,UAAAC,OAAO;AAAA,WAAIC,YAAY,CAACD,OAAD,CAAhB;AAAA,GAAxB;AACD,CALH,EAOE;;;AACA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAD,OAAO,EAAI;AAC9B,MAAME,YAAY,GAAGF,OAAO,CAACF,sBAAR,CAA+B,eAA/B,EAAgD,CAAhD,CAArB;AACA,MAAMK,SAAS,GAAGH,OAAO,CAACF,sBAAR,CAA+B,MAA/B,EAAuC,CAAvC,CAAlB;AACA,MAAMM,UAAU,GAAGJ,OAAO,CAACF,sBAAR,CAA+B,OAA/B,EAAwC,CAAxC,CAAnB;;AAEA,MAAI,CAACI,YAAD,IAAiB,CAACC,SAAlB,IAA+B,CAACC,UAApC,EAAgD;AAC9CC,IAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ;AACA;AACD;;AAEDI,EAAAA,UAAU,CAACG,gBAAX,CAA4B,OAA5B,EAAqC,UAAAC,CAAC,EAAI;AACxC;AACAA,IAAAA,CAAC,CAACC,cAAF;AAEAC,IAAAA,iBAAiB,CAAC,OAAD,CAAjB;AAEAR,IAAAA,YAAY,CAACS,QAAb,CAAsB;AACpBC,MAAAA,IAAI,EAAEV,YAAY,CAACW,WADC;AAEpBC,MAAAA,SAAS,EAAE;AAFS,KAAtB;AAID,GAVD;AAYAX,EAAAA,SAAS,CAACI,gBAAV,CAA2B,OAA3B,EAAoC,UAAAC,CAAC,EAAI;AACvCA,IAAAA,CAAC,CAACC,cAAF;AAEAC,IAAAA,iBAAiB,CAAC,MAAD,CAAjB;AAEAR,IAAAA,YAAY,CAACS,QAAb,CAAsB;AACpBC,MAAAA,IAAI,EAAE,CADc;AAEpBE,MAAAA,SAAS,EAAE;AAFS,KAAtB;AAID,GATD;;AAWA,MAAMJ,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAK,SAAS,EAAI;AACrC,QAAIA,SAAS,IAAI,OAAjB,EAA0B;AACxBX,MAAAA,UAAU,CAACY,SAAX,CAAqBC,MAArB,CAA4B,QAA5B;AACAd,MAAAA,SAAS,CAACa,SAAV,CAAoBE,GAApB,CAAwB,QAAxB;AACD,KAHD,MAGO,IAAIH,SAAS,IAAI,MAAjB,EAAyB;AAC9BZ,MAAAA,SAAS,CAACa,SAAV,CAAoBC,MAApB,CAA2B,QAA3B;AACAb,MAAAA,UAAU,CAACY,SAAX,CAAqBE,GAArB,CAAyB,QAAzB;AACD;AACF,GARD;AASD,CA1CD","file":"App.06dce650.js","sourceRoot":"..","sourcesContent":["window.onload = () => {\r\n    const listings = Array.from(document.getElementsByClassName('listings'))\r\n  \r\n    // loop through listings\r\n    listings.forEach(listing => handleSlider(listing))\r\n  }\r\n  \r\n  // define function to handle slider\r\n  const handleSlider = listing => {\r\n    const listingsGrid = listing.getElementsByClassName('listings-grid')[0]\r\n    const arrowLeft = listing.getElementsByClassName('left')[0]\r\n    const arrowRight = listing.getElementsByClassName('right')[0]\r\n  \r\n    if (!listingsGrid || !arrowLeft || !arrowRight) {\r\n      console.log(listing)\r\n      return\r\n    }\r\n  \r\n    arrowRight.addEventListener('click', e => {\r\n      // prevent default button behaviour\r\n      e.preventDefault()\r\n  \r\n      handleClassChange('right')\r\n  \r\n      listingsGrid.scrollTo({\r\n        left: listingsGrid.offsetWidth,\r\n        behaviour: 'smooth',\r\n      })\r\n    })\r\n  \r\n    arrowLeft.addEventListener('click', e => {\r\n      e.preventDefault()\r\n  \r\n      handleClassChange('left')\r\n  \r\n      listingsGrid.scrollTo({\r\n        left: 0,\r\n        behaviour: 'smooth',\r\n      })\r\n    })\r\n  \r\n    const handleClassChange = direction => {\r\n      if (direction == 'right') {\r\n        arrowRight.classList.remove('darker')\r\n        arrowLeft.classList.add('darker')\r\n      } else if (direction == 'left') {\r\n        arrowLeft.classList.remove('darker')\r\n        arrowRight.classList.add('darker')\r\n      }\r\n    }\r\n  }"]}